# getting started with tmux - from http://www.edschmalzle.com/2010/09/29/getting-into-tmux/
# C-b is not acceptable -- Vim uses it
unbind C-b
bind Space send-prefix
set-option -g prefix C-Space
bind-key Space copy-mode
bind-key C-Space last-window

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# Make mouse useful in copy mode
set-option -g mouse on

# reload configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind j split-window -v
bind C-j split-window -v

bind l split-window -h
bind C-l split-window -h

# start numbering at 1
set -g base-index 1

setw -g mode-keys vi

set-option -sg escape-time 10

source-file -q $HOME/.config/tmux/conf.d/*.conf

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys M-h) || tmux select-pane -L"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys M-j) || tmux select-pane -D"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys M-k) || tmux select-pane -U"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys M-l) || tmux select-pane -R"
bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'M-\\') || tmux select-pane -l"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

#set -g @resurrect-capture-pane-contents 'on'
#set -g @resurrect-processes '"~yarn.js start"'
set -g @resurrect-processes 'ssh yarn'
set -g @resurrect-strategy-nvim 'session'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Automatically install tmux plugin manager and plugins if not already installed
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
